.schema
SELECT title FROM movies WHERE year = 2008
jkl
;
SELECT title FROM movies WHERE year = 2008;
SELECT COUNT(title) FROM movies WHERE year = 2008;
SELECT COUNT(title) FROM movies WHERE year = 2008;
submit50 cs50/problems/2020/x/movies
;
quit
end
;
fd
;
.schema
SELECT birth FROM people WHERE name = "Emma Stone";
SELECT COUNT(title) FROM movies WHERE year >= 2018;
SELECT title FROM movies WHERE year >= 2018 ORDER BY title ASC LIMIT = 10;
SELECT title FROM movies WHERE year >= 2018 ORDER BY title ASC LIMIT 10;
SELECT title FROM movies WHERE year >= 2018 ORDER BY title LIMIT 10;
SELECT COUNT(title) FROM movies WHERE year >= 2018 ORDER BY title;
submit50 cs50/problems/2020/x/movies
.schema
SELECT COUNT(rating) FROM ratings WHERE rating = 10.0;
SELECT COUNT(rating) FROM ratings WHERE rating = 10.0;
cat 4.sql | sqlite3 movies.db
;
.schema
SELECT title, year FROM movies WHERE title = "%harry potter%" ORDER BY year;
SELECT title AND year FROM movies WHERE title = "%harry potter%" ORDER BY year;
SELECT title,year FROM movies WHERE title = "%harry potter%" ORDER BY year;
SELECT title FROM movies WHERE title = "%harry potter%" ORDER BY year;
SELECT title FROM movies WHERE title = "%harry potter%";
SELECT title FROM movies WHERE title = "harry potter";
.schema
SELECT title FROM movies WHERE title = "harry potter";
SELECT COUNT(rating) FROM ratings WHERE rating = 10.0;
SELECT title FROM movies WHERE title = 'harry';
SELECT title FROM movies WHERE title = '%harry potter%';
SELECT title FROM movies WHERE title = 'harry potter%';
SELECT title FROM movies WHERE title = '%harry%potter%';
SELECT title FROM movies WHERE title LIKE "%harry potter%";
SELECT title FROM movies WHERE title LIKE "%harry potter and%";
SELECT title, year FROM movies WHERE title LIKE "%harry potter and%";
SELECT title, year FROM movies WHERE title LIKE "Harry Potter and%";
SELECT title, year FROM movies WHERE title LIKE "Harry Potter and%";
SELECT title, year FROM movies WHERE title LIKE "Harry Potter%";
SELECT title, year FROM movies WHERE title LIKE "Harry Potter%" ORDER BY year;
SELECT title, year FROM movies WHERE title LIKE "Harry Potter%" ORDER BY year;
SELECT title, year FROM movies WHERE title LIKE "Harry Potter%" ORDER BY 2;
SELECT title, year FROM movies WHERE title LIKE "Harry Potter%" ORDER BY year;
.schema
SELECT AVG(rating) FROM ratings JOIN movies WHERE year = 2012;
SELECT AVG(rating) FROM ratings JOIN movies ON ratings.movie_id = movies.id WHERE year = 1012;
SELECT AVG(rating) FROM ratings JOIN movies ON ratings.movie_id = movies.id WHERE year = 2012;
SELECT AVG(rating) FROM ratings JOIN movies ON ratings.movie_id = movies.id WHERE year = 2012;
.schema
SELECT movie_id, rating FROM ratings WHERE rating IS NOT NULL
ORDER BY ASC;
SELECT movie_id, rating FROM ratings WHERE rating IS NOT NULL
ORDER BY rating ASC;
SELECT movie_id, rating FROM ratings WHERE rating IS NOT NULL
SELECT movie_id, rating FROM ratings WHERE rating IS NOT NULL AND movie_id.year = 2010
ORDER BY rating ASC;
.schema
SELECT movie_id, rating FROM ratings JOIN movies ON ratings.movie_id = movies.id WHERE YEAR = 2010 ORDER BY ratings DESC;
SELECT movie_id, rating FROM ratings JOIN movies ON ratings.movie_id = movies.id WHERE YEAR = 2010 ORDER BY rating DESC;
SELECT movie_id, rating FROM ratings JOIN movies ON ratings.movie_id = movies.title WHERE YEAR = 2010 ORDER BY rating DESC;
SELECT movie_id, rating FROM ratings JOIN movies ON ratings.movie_id = movies.id WHERE YEAR = 2010 ORDER BY rating DESC LIMIT 10;
.schema
SELECT movies.title, ratings.rating FROM movies JOIN ratings ON ratings.movie_id = movies.id WHERE year = 2010 ORDER BY rating DESC
;
.schema
SELECT name FROM people WHERE id IN (SELECT person_id FROM stars WHERE movie_id IN (SELECT id FROM movies WHERE title = "Toy Story"));
.schema
SELECT COUNT(name) FROM people WHERE id IN (SELECT person_id FROM stars WHERE movie_id IN (SELECT id FROM movies WHERE year = 2004));
SELECT COUNT(name) FROM people WHERE id IN (SELECT person_id FROM directors WHERE movie_id IN (SELECT movie_id FROM ratings WHERE ratings >= 9.0));
SELECT COUNT(name) FROM people WHERE id IN (SELECT person_id FROM directors WHERE movie_id IN (SELECT movie_id FROM ratings WHERE rating >= 9.0));
.schema
SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Chadwick Boseman")) ORDER BY rating FROM ratings LIMIT 5;
SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Chadwick Boseman"));
SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Chadwick Boseman")) ORDER BY rating DESC LIMIT 5;
SELECT title FROM movies JOIN ratings  WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Chadwick Boseman")) ORDER BY rating DESC LIMIT 5;
SELECT title FROM movies JOIN ratings  WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Chadwick Boseman")) ORDER BY rating LIMIT 5;
SELECT title FROM movies JOIN ratings  WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Chadwick Boseman")) ORDER BY rating;
.schema
SELECT movies.title FROM people 
;
SELECT movies.title FROM people JOIN movies ON id = movies.id; 
SELECT movies.title FROM people JOIN stars ON stars.people_id = id JOIN movies ON stars.movie_id = movies.id JOIN ratings ON movies.id = ratings.movie_id WHERE people.name = "Chadwick Boseman" ORDER BY rating DESC LIMIT 5;
SELECT movies.title FROM people JOIN stars ON stars.person_id = id JOIN movies ON stars.movie_id = movies.id JOIN ratings ON movies.id = ratings.movie_id WHERE people.name = "Chadwick Boseman" ORDER BY rating DESC LIMIT 5;
SELECT movies.title FROM people JOIN stars ON stars.person_id = people.id JOIN movies ON stars.movie_id = movies.id JOIN ratings ON movies.id = ratings.movie_id WHERE people.name = "Chadwick Boseman" ORDER BY rating DESC LIMIT 5;
.schema
SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Johnny Depp" and name = "Helena Bonham Carter")); 
SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Johnny Depp"));
SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Johnny Depp")) AND WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Helena Bonham Carter"));
SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Johnny Depp")) AND WHERE id IN (SELECT movie_id FROM stars WHERE  person_id IN (SELECT id FROM people WHERE name = "Helena Bonham Carter"));
.schema
SELECT movies.title FROM people 
JOIN stars ON stars.person_id = people.id 
JOIN movies ON stars.movie_id = movies.id 
JOIN ratings ON movies.id = ratings.movie_id 
WHERE people.name = "Chadwick Boseman" 
;                                                   
SELECT movies.title FROM people 
JOIN stars ON stars.person_id = people.id 
JOIN movies ON stars.movie_id = movies.id 
JOIN ratings ON movies.id = ratings.movie_id 
WHERE people.name = "Johnny Depp" AND people.name = "Helena Bonham Carter";
SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE person_id IN (SELECT id FROM people WHERE name = "Johnny Depp")) INTERSECT SELECT title FROM movies WHERE id IN (SELECT movie_id FROM stars WHERE  person_id IN (SELECT id FROM people WHERE name = "Helena Bonham Carter"));
.schema
SELECT name FROM people WHERE name = "Kevin Bacon" AND birth = 1958;
SELECT name FROM people WHERE name = "Kevin Bacon" AND birth = 1958 INTERSECT 
;
SELECT DISTINCT(name) FROM people WHERE id IN 
(SELECT person_id FROM stars WHERE movie_id IN 
(SELECT id FROM movies WHERE year = 2004)) 
ORDER BY year; 
.schema
SELECT DISTINCT(name) FROM people WHERE id IN 
(SELECT person_id FROM stars WHERE movie_id IN 
(SELECT id FROM movies WHERE year = 2004)) 
ORDER BY birth; 
.help
.schema
SELECT * FROM users
;
.schemea
.schema
SELECT * FROM users
;
.schema
SELECT * FROM users;
CREATE TABLE 
;
.schema
.schema
CREATE TABLE buys (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, shares INTEGER NOT NULL, price INTEGER NOT NULL
FDF;
CREATE TABLE buys (
fjkdll;
CREATE TABLE buys (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, shares INTEGER NOT NULL, price INTEGER NOT NULL, FOREIGN KEY(person_id) REFERENCES users(id));
.schema
.schema
ALTER TABLE buys DROP COLUMN price;
ALTER TABLE buys DROP COLUMN price;
ALTER TABLE buys MODIFY COLUMN price NUMERIC NOT NULL;
DROP TABLE buys;
.schema
CREATE TABLE buys (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, shares INTEGER NOT NULL, price NUMERIC NOT NULL, FOREIGN KEY(person_id) REFERENCES users(id));
.schema
ALTER TABLE buys ADD time DATETIME NOT NULL DEFAULT(GETDATE());
ALTER TABLE buys ADD time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE buys ADD UNIQUE(time) DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE buys ADD UNIQUE (time) DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP;
.schema
SELECT cash FROM users;
SELECT cash FROM users WHERE id = 1;
.schema
.schema
SELECT * FROM buys WHERE person_id = 1;
SELECT * FROM buys;
.schema
.schema
SELECT cash FROM users WHERE id = 1;
.schema
.schema
SELECT shares FROM buys WHERE person_id = 1 AND symbol = AAPL;
SELECT * FROM buys;
SELECT shares FROM buys WHERE person_id = 1 AND symbol = 'aapl';
SELECT SUM(shares) FROM buys WHERE person_id = 1 AND symbol = 'aapl';
.schema
.schema
ALTER TABLE buys ADD type TEXT NOT NULL;
ALTER TABLE buys ADD type TEXT;
.schema
CREATE TABLE total (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, totalShares INTEGERNOT NULL, FOREIGN KEY(person_id) REFERENCES users(id));
.schema
DELETE total;
DELETE TABLE total;
DROP TABLE total;
CREATE TABLE total (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, totalShares INTEGER NOT NULL, FOREIGN KEY(person_id) REFERENCES users(id));
.schema
DROP TABLE total;
.schema
SELECT * FROM buys;
.schema
DROP TABLE buys;
CREATE TABLE buys (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, shares INTEGER NOT NULL, type TEXT NOT NULL, FOREIGN KEY(person_id) REFERENCES users(id));
.schema
.schema
DROP TABLE buys;
CREATE buys (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, shares INTEGER NOT NULL, trType TEXT NOT NULL, FOREIGN KEY(person_id) REFERENCES users(id));
CREATE TABLE buys (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, shares INTEGER NOT NULL, trType TEXT NOT NULL, FOREIGN KEY(person_id) REFERENCES users(id));
SELECT * FROM buys;
SELECT * FROM buys;
SELECT * FROM buys WHERE person_id = 5;
.schema
DROP TABLE buys;
CREATE TABLE buys (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, shares INTEGER NOT NULL, trType TEXT NOT NULL, time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY(person_id) REFERENCES users(id));
.schema
SELECT * FROM buys WHERE person_id = 5;
.schema
DROP TABLE buys;
CREATE TABLE buys (person_id INTEGER NOT NULL, symbol TEXT NOT NULL, shares INTEGER NOT NULL, price FLOAT(3), trType TEXT NOT NULL, time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY(person_id) REFERENCES users(id));
.schema
.schema
SELECT * FROM buys;
